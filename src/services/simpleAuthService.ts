import { supabase } from '@/lib/supabase'

export interface SimpleAuthUser {
  id: string
  email: string
  role: string
}

class SimpleAuthService {
  private currentUser: SimpleAuthUser | null = null

  async login(email: string, password: string): Promise<{ user: SimpleAuthUser | null, error: string | null }> {
    try {
      console.log('üü° SimpleAuth: –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å email:', email);

      // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ –Ω–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ admin_users
      const { data, error } = await supabase
        .from('admin_users')
        .select('*')
        .eq('email', email)
        .eq('password', password)
        .single()

      console.log('üü° SimpleAuth: –û—Ç–≤–µ—Ç:', { data, error });

      if (error || !data) {
        console.log('üî¥ SimpleAuth: –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        return { user: null, error: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å' }
      }

      this.currentUser = {
        id: data.id,
        email: data.email,
        role: data.role
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('simpleAuth', JSON.stringify(this.currentUser));

      console.log('üü¢ SimpleAuth: –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:', this.currentUser);
      return { user: this.currentUser, error: null }

    } catch (error) {
      console.error('üî¥ SimpleAuth: –û—à–∏–±–∫–∞:', error);
      return { user: null, error: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞' }
    }
  }

  logout() {
    this.currentUser = null
    localStorage.removeItem('simpleAuth')
  }

  getCurrentUser(): SimpleAuthUser | null {
    if (this.currentUser) {
      return this.currentUser
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
    const stored = localStorage.getItem('simpleAuth')
    if (stored) {
      try {
        this.currentUser = JSON.parse(stored)
        return this.currentUser
      } catch {
        localStorage.removeItem('simpleAuth')
      }
    }

    return null
  }

  isAdmin(): boolean {
    const user = this.getCurrentUser()
    return user?.role === 'admin'
  }
}

export const simpleAuthService = new SimpleAuthService()