import { supabase } from '@/lib/supabase'

export interface SimpleAuthUser {
  id: string
  email: string
  role: string
}

class SimpleAuthService {
  private currentUser: SimpleAuthUser | null = null

  async login(email: string, password: string): Promise<{ user: SimpleAuthUser | null, error: string | null }> {
    try {
      console.log('üü° SimpleAuth: –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å email:', email);

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é Supabase –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
      const { data, error } = await supabase.auth.signInWithPassword({
        email,
        password,
      })

      console.log('üü° SimpleAuth: –û—Ç–≤–µ—Ç:', { data, error });

      if (error || !data.user) {
        console.log('üî¥ SimpleAuth: –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        return { user: null, error: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å' }
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userRole = data.user.user_metadata?.role || data.user.raw_user_meta_data?.role || 'viewer';

      this.currentUser = {
        id: data.user.id,
        email: data.user.email || '',
        role: userRole
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('simpleAuth', JSON.stringify(this.currentUser));

      console.log('üü¢ SimpleAuth: –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:', this.currentUser);
      return { user: this.currentUser, error: null }

    } catch (error) {
      console.error('üî¥ SimpleAuth: –û—à–∏–±–∫–∞:', error);
      return { user: null, error: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞' }
    }
  }

  async logout() {
    this.currentUser = null
    localStorage.removeItem('simpleAuth')

    // –¢–∞–∫–∂–µ –≤—ã—Ö–æ–¥–∏–º –∏–∑ Supabase auth
    await supabase.auth.signOut()
  }

  getCurrentUser(): SimpleAuthUser | null {
    if (this.currentUser) {
      return this.currentUser
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
    const stored = localStorage.getItem('simpleAuth')
    if (stored) {
      try {
        this.currentUser = JSON.parse(stored)
        return this.currentUser
      } catch {
        localStorage.removeItem('simpleAuth')
      }
    }

    return null
  }

  isAdmin(): boolean {
    const user = this.getCurrentUser()
    return user?.role === 'admin'
  }
}

export const simpleAuthService = new SimpleAuthService()